name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "master" ] # tu rama principal

env:
  PROJECT_ID: farmatodo-cicd-project
  GAR_LOCATION: us-central1
  SERVICE_NAME: java-api-service
  REPOSITORY_NAME: prueba-tecnica-repo # repo en Artifact Registry

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # 1. Descargar tu código
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar Java 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Dar permisos de ejecución al wrapper de Gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # 4. Construir y probar con Gradle
      - name: Build and test with Gradle
        run: ./gradlew build

      # 5. Autenticarse en Google Cloud con Workload Identity Federation
      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/578301564702/locations/global/workloadIdentityPools/farmatodo-actions-pool/providers/github-provider'
          service_account: 'github-actions-builder@farmatodo-cicd-project.iam.gserviceaccount.com'

      # 6. Configurar gcloud CLI (aquí se leen las credenciales creadas arriba)
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # 7. Verificar identidad (debe mostrar el service account activo)
      - name: Verify gcloud identity
        run: gcloud auth list

      # 8. Configurar Docker para autenticarse con Artifact Registry
      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      # 9. Construir la imagen de Docker
      - name: Build Docker image
        run: |
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/java-app:latest" \
            --file deployment/Dockerfile .

      # 10. Subir la imagen a Google Artifact Registry
      - name: Push Docker image
        run: docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/java-app:latest"

      # 11. Desplegar la nueva imagen en Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/java-app:latest" \
            --region ${{ env.GAR_LOCATION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --quiet
